{"code":"import * as tslib_1 from \"tslib\";\r\nimport { doc } from '../doc';\r\nimport { assert } from '../util';\r\nimport { IORouterRegistry } from './router_registry';\r\nvar URL_SCHEME_SUFFIX = '://';\r\nvar ModelStoreManagerRegistry = (function () {\r\n    function ModelStoreManagerRegistry() {\r\n        this.managers = {};\r\n    }\r\n    ModelStoreManagerRegistry.getInstance = function () {\r\n        if (ModelStoreManagerRegistry.instance == null) {\r\n            ModelStoreManagerRegistry.instance = new ModelStoreManagerRegistry();\r\n        }\r\n        return ModelStoreManagerRegistry.instance;\r\n    };\r\n    ModelStoreManagerRegistry.registerManager = function (scheme, manager) {\r\n        assert(scheme != null, 'scheme must not be undefined or null.');\r\n        if (scheme.endsWith(URL_SCHEME_SUFFIX)) {\r\n            scheme = scheme.slice(0, scheme.indexOf(URL_SCHEME_SUFFIX));\r\n        }\r\n        assert(scheme.length > 0, 'scheme must not be an empty string.');\r\n        var registry = ModelStoreManagerRegistry.getInstance();\r\n        assert(registry.managers[scheme] == null, \"A model store manager is already registered for scheme '\" + scheme + \"'.\");\r\n        registry.managers[scheme] = manager;\r\n    };\r\n    ModelStoreManagerRegistry.getManager = function (scheme) {\r\n        var manager = this.getInstance().managers[scheme];\r\n        if (manager == null) {\r\n            throw new Error(\"Cannot find model manager for scheme '\" + scheme + \"'\");\r\n        }\r\n        return manager;\r\n    };\r\n    ModelStoreManagerRegistry.getSchemes = function () {\r\n        return Object.keys(this.getInstance().managers);\r\n    };\r\n    return ModelStoreManagerRegistry;\r\n}());\r\nexport { ModelStoreManagerRegistry };\r\nfunction parseURL(url) {\r\n    if (url.indexOf(URL_SCHEME_SUFFIX) === -1) {\r\n        throw new Error(\"The url string provided does not contain a scheme. \" +\r\n            \"Supported schemes are: \" +\r\n            (\"\" + ModelStoreManagerRegistry.getSchemes().join(',')));\r\n    }\r\n    return {\r\n        scheme: url.split(URL_SCHEME_SUFFIX)[0],\r\n        path: url.split(URL_SCHEME_SUFFIX)[1],\r\n    };\r\n}\r\nfunction cloneModelInternal(sourceURL, destURL, deleteSource) {\r\n    if (deleteSource === void 0) { deleteSource = false; }\r\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n        var loadHandlers, loadHandler, saveHandlers, saveHandler, sourceScheme, sourcePath, sameMedium, modelArtifacts, saveResult;\r\n        return tslib_1.__generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    assert(sourceURL !== destURL, \"Old path and new path are the same: '\" + sourceURL + \"'\");\r\n                    loadHandlers = IORouterRegistry.getLoadHandlers(sourceURL);\r\n                    assert(loadHandlers.length > 0, \"Copying failed because no load handler is found for source URL \" + sourceURL + \".\");\r\n                    assert(loadHandlers.length < 2, \"Copying failed because more than one (\" + loadHandlers.length + \") \" +\r\n                        (\"load handlers for source URL \" + sourceURL + \".\"));\r\n                    loadHandler = loadHandlers[0];\r\n                    saveHandlers = IORouterRegistry.getSaveHandlers(destURL);\r\n                    assert(saveHandlers.length > 0, \"Copying failed because no save handler is found for destination URL \" +\r\n                        (destURL + \".\"));\r\n                    assert(saveHandlers.length < 2, \"Copying failed because more than one (\" + loadHandlers.length + \") \" +\r\n                        (\"save handlers for destination URL \" + destURL + \".\"));\r\n                    saveHandler = saveHandlers[0];\r\n                    sourceScheme = parseURL(sourceURL).scheme;\r\n                    sourcePath = parseURL(sourceURL).path;\r\n                    sameMedium = sourceScheme === parseURL(sourceURL).scheme;\r\n                    return [4, loadHandler.load()];\r\n                case 1:\r\n                    modelArtifacts = _a.sent();\r\n                    if (!(deleteSource && sameMedium)) return [3, 3];\r\n                    return [4, ModelStoreManagerRegistry.getManager(sourceScheme)\r\n                            .removeModel(sourcePath)];\r\n                case 2:\r\n                    _a.sent();\r\n                    _a.label = 3;\r\n                case 3: return [4, saveHandler.save(modelArtifacts)];\r\n                case 4:\r\n                    saveResult = _a.sent();\r\n                    if (!(deleteSource && !sameMedium)) return [3, 6];\r\n                    return [4, ModelStoreManagerRegistry.getManager(sourceScheme)\r\n                            .removeModel(sourcePath)];\r\n                case 5:\r\n                    _a.sent();\r\n                    _a.label = 6;\r\n                case 6: return [2, saveResult.modelArtifactsInfo];\r\n            }\r\n        });\r\n    });\r\n}\r\nvar ModelManagement = (function () {\r\n    function ModelManagement() {\r\n    }\r\n    ModelManagement.listModels = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var schemes, out, _i, schemes_1, scheme, schemeOut, path, url;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        schemes = ModelStoreManagerRegistry.getSchemes();\r\n                        out = {};\r\n                        _i = 0, schemes_1 = schemes;\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        if (!(_i < schemes_1.length)) return [3, 4];\r\n                        scheme = schemes_1[_i];\r\n                        return [4, ModelStoreManagerRegistry.getManager(scheme).listModels()];\r\n                    case 2:\r\n                        schemeOut = _a.sent();\r\n                        for (path in schemeOut) {\r\n                            url = scheme + URL_SCHEME_SUFFIX + path;\r\n                            out[url] = schemeOut[path];\r\n                        }\r\n                        _a.label = 3;\r\n                    case 3:\r\n                        _i++;\r\n                        return [3, 1];\r\n                    case 4: return [2, out];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ModelManagement.removeModel = function (url) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var schemeAndPath, manager;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        schemeAndPath = parseURL(url);\r\n                        manager = ModelStoreManagerRegistry.getManager(schemeAndPath.scheme);\r\n                        return [4, manager.removeModel(schemeAndPath.path)];\r\n                    case 1: return [2, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ModelManagement.copyModel = function (sourceURL, destURL) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var deleteSource;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        deleteSource = false;\r\n                        return [4, cloneModelInternal(sourceURL, destURL, deleteSource)];\r\n                    case 1: return [2, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ModelManagement.moveModel = function (sourceURL, destURL) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var deleteSource;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        deleteSource = true;\r\n                        return [4, cloneModelInternal(sourceURL, destURL, deleteSource)];\r\n                    case 1: return [2, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Models', subheading: 'Management' })\r\n    ], ModelManagement, \"listModels\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Models', subheading: 'Management' })\r\n    ], ModelManagement, \"removeModel\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Models', subheading: 'Management' })\r\n    ], ModelManagement, \"copyModel\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Models', subheading: 'Management' })\r\n    ], ModelManagement, \"moveModel\", null);\r\n    return ModelManagement;\r\n}());\r\nexport { ModelManagement };\r\n//# sourceMappingURL=model_management.js.map","map":"{\"version\":3,\"file\":\"model_management.js\",\"sourceRoot\":\"\",\"sources\":[\"../src/io/model_management.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/usr/local/google/home/cais/tfjs/tfjs-core/io/model_management.d.ts","text":"import { ModelArtifactsInfo, ModelStoreManager } from './types';\r\nexport declare class ModelStoreManagerRegistry {\r\n    private static instance;\r\n    private managers;\r\n    private constructor();\r\n    private static getInstance();\r\n    static registerManager(scheme: string, manager: ModelStoreManager): void;\r\n    static getManager(scheme: string): ModelStoreManager;\r\n    static getSchemes(): string[];\r\n}\r\nexport declare class ModelManagement {\r\n    static listModels(): Promise<{\r\n        [url: string]: ModelArtifactsInfo;\r\n    }>;\r\n    static removeModel(url: string): Promise<ModelArtifactsInfo>;\r\n    static copyModel(sourceURL: string, destURL: string): Promise<ModelArtifactsInfo>;\r\n    static moveModel(sourceURL: string, destURL: string): Promise<ModelArtifactsInfo>;\r\n}\r\n"}}
